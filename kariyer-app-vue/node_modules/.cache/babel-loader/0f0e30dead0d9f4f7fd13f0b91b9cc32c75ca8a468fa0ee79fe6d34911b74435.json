{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Navbar from './components/Navbar.vue';\nexport default {\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      showNavbar: false,\n      user: null,\n      isHomePage: false // Arka plan resminin görünüm durumunu kontrol eden değişken\n    };\n  },\n  created() {\n    const activeUserId = localStorage.getItem(\"ActiveUserId\");\n    const activeUserType = localStorage.getItem(\"ActiveUserType\");\n    if (activeUserId && activeUserId !== '-1') {\n      this.user = {\n        id: activeUserId,\n        type: activeUserType\n      };\n      this.showNavbar = true;\n    }\n  },\n  watch: {\n    $route(to) {\n      // Eğer route `/home` ise arka planı kaldır\n      this.isHomePage = to.path === '/home';\n    }\n  },\n  methods: {\n    handleLoginSuccess(user) {\n      this.user = user;\n      localStorage.setItem(\"ActiveUserId\", user.id);\n      localStorage.setItem(\"ActiveUserType\", user.type);\n      this.showNavbar = true;\n      this.$router.push('/home');\n    },\n    handleExit() {\n      localStorage.setItem(\"ActiveUserId\", '-1');\n      localStorage.setItem(\"ActiveUserType\", '');\n      this.showNavbar = false;\n    }\n  }\n};","map":{"version":3,"names":["Navbar","components","data","showNavbar","user","isHomePage","created","activeUserId","localStorage","getItem","activeUserType","id","type","watch","$route","to","path","methods","handleLoginSuccess","setItem","$router","push","handleExit"],"sources":["C:\\Users\\Furkan\\Desktop\\Niso proje Kariyer-App\\kariyer-app-vue\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- Navbar always on top -->\n    <Navbar \n      v-if=\"showNavbar\" \n      :user=\"user\"\n      @exit-success=\"handleExit\"\n    />\n\n    <!-- Main content area with white background and scrolling -->\n    <div class=\"content-area\">\n      <router-view\n        :user=\"user\"\n        @login-success=\"handleLoginSuccess\"\n      />\n    </div>\n\n    <!-- Background image covering the whole viewport -->\n    <div v-if=\"!isHomePage\" class=\"background-image\"></div>\n  </div>\n</template>\n\n<script>\nimport Navbar from './components/Navbar.vue';\n\nexport default {\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      showNavbar: false,\n      user: null,\n      isHomePage: false, // Arka plan resminin görünüm durumunu kontrol eden değişken\n    }\n  },\n  created() {\n    const activeUserId = localStorage.getItem(\"ActiveUserId\");\n    const activeUserType = localStorage.getItem(\"ActiveUserType\");\n    \n    if (activeUserId && activeUserId !== '-1') {\n      this.user = {\n        id: activeUserId,\n        type: activeUserType\n      };\n      this.showNavbar = true;\n    }\n  },\n  watch: {\n    $route(to) {\n      // Eğer route `/home` ise arka planı kaldır\n      this.isHomePage = to.path === '/home';\n    }\n  },\n  methods: {\n    handleLoginSuccess(user) {\n      this.user = user;\n      localStorage.setItem(\"ActiveUserId\", user.id);\n      localStorage.setItem(\"ActiveUserType\", user.type);\n      \n      this.showNavbar = true;\n      this.$router.push('/home');\n    },\n    handleExit() {\n      localStorage.setItem(\"ActiveUserId\", '-1');\n      localStorage.setItem(\"ActiveUserType\", '');\n      this.showNavbar = false;\n    },\n  }\n}\n</script>\n\n<style scoped>\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n.app-container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  position: relative;\n}\n\n.background-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url('@/../public/stairs.jpg'); /* Arka plan resmi yolu */\n  background-size: cover; /* Resmi ekrana tam olarak kaplar */\n  background-position: center;\n  background-repeat: no-repeat;\n  z-index: -1; /* Arka planı içerikten arka plana koyar */\n}\n\n.content-area {\n  margin: 0;\n  width: 95%; /* İçerik alanının genişliğini artırdık */\n  max-width: 1200px; /* İçerik alanının maksimum genişliği */\n  background-color: white; /* Beyaz arka plan */\n  height: 100%; /* Yüksekliği doldurur */\n  overflow-y: auto; /* Kaydırma desteği */\n  position: relative;\n  padding: 20px; /* İçerik alanına biraz boşluk ekleyebiliriz */\n}\n</style>\n"],"mappings":";AAuBA,OAAOA,MAAK,MAAO,yBAAyB;AAE5C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,KAAK,CAAE;IACrB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,YAAW,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,MAAMC,cAAa,GAAIF,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAE7D,IAAIF,YAAW,IAAKA,YAAW,KAAM,IAAI,EAAE;MACzC,IAAI,CAACH,IAAG,GAAI;QACVO,EAAE,EAAEJ,YAAY;QAChBK,IAAI,EAAEF;MACR,CAAC;MACD,IAAI,CAACP,UAAS,GAAI,IAAI;IACxB;EACF,CAAC;EACDU,KAAK,EAAE;IACLC,MAAMA,CAACC,EAAE,EAAE;MACT;MACA,IAAI,CAACV,UAAS,GAAIU,EAAE,CAACC,IAAG,KAAM,OAAO;IACvC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkBA,CAACd,IAAI,EAAE;MACvB,IAAI,CAACA,IAAG,GAAIA,IAAI;MAChBI,YAAY,CAACW,OAAO,CAAC,cAAc,EAAEf,IAAI,CAACO,EAAE,CAAC;MAC7CH,YAAY,CAACW,OAAO,CAAC,gBAAgB,EAAEf,IAAI,CAACQ,IAAI,CAAC;MAEjD,IAAI,CAACT,UAAS,GAAI,IAAI;MACtB,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;IAC5B,CAAC;IACDC,UAAUA,CAAA,EAAG;MACXd,YAAY,CAACW,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC;MAC1CX,YAAY,CAACW,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;MAC1C,IAAI,CAAChB,UAAS,GAAI,KAAK;IACzB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}