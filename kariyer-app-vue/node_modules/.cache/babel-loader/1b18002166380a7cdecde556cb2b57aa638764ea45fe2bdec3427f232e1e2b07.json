{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"content-area\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"background-image\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Navbar always on top \"), $data.showNavbar ? (_openBlock(), _createBlock(_component_Navbar, {\n    key: 0,\n    user: $data.user,\n    onExitSuccess: $options.handleExit\n  }, null, 8 /* PROPS */, [\"user\", \"onExitSuccess\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Main content area with white background and scrolling \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_view, {\n    user: $data.user,\n    onLoginSuccess: $options.handleLoginSuccess\n  }, null, 8 /* PROPS */, [\"user\", \"onLoginSuccess\"])]), _createCommentVNode(\" Background image covering the whole viewport \"), _hoisted_3]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$data","showNavbar","_createBlock","_component_Navbar","key","user","onExitSuccess","$options","handleExit","_hoisted_2","_createVNode","_component_router_view","onLoginSuccess","handleLoginSuccess","_hoisted_3"],"sources":["C:\\Users\\Furkan\\Desktop\\Niso proje Kariyer-App\\kariyer-app-vue\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- Navbar always on top -->\n    <Navbar \n      v-if=\"showNavbar\" \n      :user=\"user\"\n      @exit-success=\"handleExit\"\n    />\n\n    <!-- Main content area with white background and scrolling -->\n    <div class=\"content-area\">\n      <router-view\n        :user=\"user\"\n        @login-success=\"handleLoginSuccess\"\n      />\n    </div>\n\n    <!-- Background image covering the whole viewport -->\n    <div class=\"background-image\"></div>\n  </div>\n</template>\n\n<script>\nimport Navbar from './components/Navbar.vue';\n\nexport default {\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      showNavbar: false,\n      user: null,\n    }\n  },\n  created() {\n    const activeUserId = localStorage.getItem(\"ActiveUserId\");\n    const activeUserType = localStorage.getItem(\"ActiveUserType\");\n    \n    if (activeUserId && activeUserId !== '-1') {\n      this.user = {\n        id: activeUserId,\n        type: activeUserType\n      };\n      this.showNavbar = true;\n    }\n  },\n  methods: {\n    handleLoginSuccess(user) {\n      this.user = user;\n      localStorage.setItem(\"ActiveUserId\", user.id);\n      localStorage.setItem(\"ActiveUserType\", user.type);\n      \n      this.showNavbar = true;\n      this.$router.push('/home');\n    },\n    handleExit() {\n      localStorage.setItem(\"ActiveUserId\", '-1');\n      localStorage.setItem(\"ActiveUserType\", '');\n      this.showNavbar = false;\n    },\n  }\n}\n</script>\n\n<style scoped>\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n.app-container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  position: relative;\n}\n\n.background-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url('@/../public/stairs.jpg'); /* Arka plan resmi yolu */\n  background-size: cover; /* Resmi ekrana tam olarak kaplar */\n  background-position: center;\n  background-repeat: no-repeat;\n  z-index: -1; /* Arka planı içerikten arka plana koyar */\n}\n\n.content-area {\n  margin: 0 auto; /* Ortalamak için */\n  width: 85%; /* İçerik alanının genişliği %85 */\n  background-color: white; /* Beyaz arka plan */\n  height: 100%; /* Yüksekliği doldurur */\n  overflow-y: auto; /* Kaydırma desteği */\n  position: relative;\n  padding: 20px; /* İçerik alanına biraz boşluk ekleyebiliriz */\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAe;;EASnBA,KAAK,EAAC;AAAc;gEAQzBC,mBAAA,CAAoC;EAA/BD,KAAK,EAAC;AAAkB;;;;uBAjB/BE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,0BAA6B,EAErBC,KAAA,CAAAC,UAAU,I,cADlBC,YAAA,CAIEC,iBAAA;IAPNC,GAAA;IAKOC,IAAI,EAAEL,KAAA,CAAAK,IAAI;IACVC,aAAY,EAAEC,QAAA,CAAAC;wDANrBT,mBAAA,gBASIA,mBAAA,2DAA8D,EAC9DH,mBAAA,CAKM,OALNa,UAKM,GAJJC,YAAA,CAGEC,sBAAA;IAFCN,IAAI,EAAEL,KAAA,CAAAK,IAAI;IACVO,cAAa,EAAEL,QAAA,CAAAM;yDAIpBd,mBAAA,kDAAqD,EACrDe,UAAoC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}