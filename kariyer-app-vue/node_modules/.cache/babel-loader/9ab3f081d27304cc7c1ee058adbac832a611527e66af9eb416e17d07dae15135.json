{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-label section title\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"card text-center\",\n  style: {\n    \"width\": \"18rem\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"card-title\"\n};\nconst _hoisted_7 = {\n  class: \"card-text\"\n};\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cvs, cv => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-md-4 mb-4\",\n      key: cv.id\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h5\", _hoisted_6, \"CV ID:\" + _toDisplayString(cv.id), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, \"İsim:\" + _toDisplayString(cv.personalInfo.firstname), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: _withModifiers($event => $options.editButton(cv.id), [\"prevent\"])\n    }, \"Eşleşen İlanlar\", 8 /* PROPS */, _hoisted_8)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","cvs","cv","key","id","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","_hoisted_7","personalInfo","firstname","onClick","_withModifiers","$event","$options","editButton","_hoisted_8"],"sources":["C:\\Users\\Furkan\\Desktop\\Niso proje Kariyer-App\\kariyer-app-vue\\src\\components\\Employee\\HomeViewEmployee.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n      <div class=\"row\">\r\n        <label  class=\"form-label section title\"></label>\r\n      \r\n          \r\n      \r\n        \r\n        \r\n          \r\n            <div \r\n              class=\"col-md-4 mb-4\" \r\n              v-for=\"cv in cvs\" \r\n              :key=\"cv.id\"\r\n            >\r\n              <div class=\"card text-center\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">CV ID:{{ cv.id }}</h5>\r\n                  <p class=\"card-text\">İsim:{{ cv.personalInfo.firstname }}</p>\r\n                  <button class=\"btn btn-primary\"\r\n                  @click.prevent=\"editButton(cv.id)\">Eşleşen İlanlar</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n          \r\n        \r\n      \r\n    \r\n    </div>\r\n      \r\n      \r\n  </template>\r\n      \r\n  <script>\r\n  import axios from 'axios';\r\n  export default{\r\n        props:{\r\n            id: {\r\n        type: Number,\r\n        required: false\r\n        },\r\n        user: {\r\n        type: Object,\r\n        default: () => ({})\r\n        }\r\n        },\r\n      data(){\r\n          return{\r\n              ActiveUserId:-1,\r\n              ActiveUserType:'',\r\n              adverts:[],\r\n              matchedCv:[],\r\n              cvs:[],\r\n          }\r\n      },\r\n      mounted() {\r\n        this.ActiveUserId=parseInt(localStorage.getItem(\"ActiveUserId\"));\r\n        this.ActiveUserType=localStorage.getItem(\"ActiveUserType\");\r\n        console.log(\"a\");\r\n        axios.get(`https://localhost:7190/cv/getRelatedCv?id=${this.user.id}`)\r\n        .then(res => {\r\n          this.cvs = res.data;\r\n          console.log(this.cvs);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching adverts:', err);\r\n        });\r\n\r\n        axios.get(`https://localhost:7190/matches/cv?id=${this.user.id}`)\r\n        .then(res => {\r\n          this.adverts = res.data;\r\n          console.log(this.adverts);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching adverts:', err);\r\n        });\r\n      },\r\n      methods:{\r\n        editButton(id) {\r\n          try {\r\n            console.log(\"Eşleşen Profiller butonuna tıklandı.\");\r\n            this.$router.push({ name: 'cv', params: { id } });\r\n            console.log(\"Rota değişikliği başarılı.\");\r\n          } catch (error) {\r\n            console.error(\"Rota değişikliği sırasında bir hata oluştu:\", error);\r\n          }\r\n        },\r\n        \r\n  \r\n  \r\n        \r\n      },\r\n      \r\n  }\r\n  </script>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAAiD;EAAzCD,KAAK,EAAC;AAA0B;;EAY7BA,KAAK,EAAC,kBAAkB;EAACE,KAAqB,EAArB;IAAA;EAAA;;;EACvBF,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAW;mBAlBtC;;uBACIG,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJH,mBAAA,CAsBQ,OAtBRI,UAsBQ,GArBNC,UAAiD,G,kBAO7CH,mBAAA,CAaMI,SAAA,QAvBlBC,WAAA,CAY2BC,KAAA,CAAAC,GAAG,EAATC,EAAE;yBAFXR,mBAAA,CAaM;MAZJH,KAAK,EAAC,eAAe;MAEpBY,GAAG,EAAED,EAAE,CAACE;QAETZ,mBAAA,CAOM,OAPNa,UAOM,GANJb,mBAAA,CAKM,OALNc,UAKM,GAJJd,mBAAA,CAA6C,MAA7Ce,UAA6C,EAAtB,QAAM,GAAAC,gBAAA,CAAGN,EAAE,CAACE,EAAE,kBACrCZ,mBAAA,CAA6D,KAA7DiB,UAA6D,EAAxC,OAAK,GAAAD,gBAAA,CAAGN,EAAE,CAACQ,YAAY,CAACC,SAAS,kBACtDnB,mBAAA,CAC2D;MADnDD,KAAK,EAAC,iBAAiB;MAC9BqB,OAAK,EApBxBC,cAAA,CAAAC,MAAA,IAoBkCC,QAAA,CAAAC,UAAU,CAACd,EAAE,CAACE,EAAE;OAAG,iBAAe,iBApBpEa,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}