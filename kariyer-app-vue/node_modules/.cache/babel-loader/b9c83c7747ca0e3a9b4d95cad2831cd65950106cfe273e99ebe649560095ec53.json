{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Navbar from './Navbar.vue';\nexport default {\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      Id: 0,\n      ActiveUser: 0,\n      PersonalInfo: {\n        FirstName: '',\n        LastName: '',\n        Age: '',\n        Gender: '',\n        Address: ''\n      },\n      ContactInfo: {\n        Email: '',\n        Phone: ''\n      },\n      EducationInfo: {\n        EduLevel: '',\n        Status: ''\n      },\n      Company: {\n        CompanyName: '',\n        CompanyField: '',\n        CompanySize: '',\n        Years: ''\n      },\n      Companies: [],\n      PreviousJobs: {\n        Name: '',\n        Position: ''\n      },\n      SelectedSkills: [],\n      Interests: [],\n      Interest: '',\n      SelectedLanguages: [],\n      Project: {\n        Title: '',\n        Content: '',\n        Time: '',\n        RelatedSkills: []\n      },\n      Projects: [],\n      FilteredSelectedSkill: [],\n      Resume: \"\",\n      searchVal: '',\n      deleteIndex: '',\n      locations: [],\n      location: '',\n      cities: [],\n      educationLevel: ['Lise', 'Önlisans', 'Lisan', 'Yüksek Lisans', 'Doktora'],\n      skillsList: [],\n      languagesList: ['İngilizce', 'Almanca', 'Fransızca', 'İspanyolca', 'İtalyanca', 'Çince']\n    };\n  },\n  computed: {\n    filteredSkills() {\n      // Arama girdisine göre skillsList'i filtrele\n      return this.skillsList.filter(skill => skill.toLowerCase().includes(this.searchVal.toLowerCase()));\n    },\n    filteredCities() {\n      const query = this.location.toLowerCase();\n      return this.cities.filter(city => city.toLowerCase().includes(query));\n    }\n  },\n  mounted() {\n    this.loadSkills();\n    this.loadCity();\n  },\n  created() {\n    this.ActiveUser = localStorage.getItem(\"ActiveUserId\");\n  },\n  methods: {\n    addCity(city) {\n      if (city && !this.locations.includes(city)) {\n        this.locations.push(city);\n        this.location = '';\n      }\n    },\n    async loadCity() {\n      try {\n        const response = await fetch('/city.json');\n        if (!response.ok) {\n          throw new Error('Ağ hatası: ' + response.statusText);\n        }\n        const data = await response.json();\n        this.cities = data;\n      } catch (error) {\n        console.error('Şehirler yüklenirken bir hata oluştu:', error);\n      }\n    },\n    deleteLocation(index) {\n      this.locations.splice(index, 1);\n    },\n    async loadSkills() {\n      try {\n        const response = await fetch('/skills.json');\n        if (!response.ok) {\n          throw new Error('Ağ hatası: ' + response.statusText);\n        }\n        const data = await response.json();\n        this.skillsList = data;\n      } catch (error) {\n        console.error('Beceriler yüklenirken bir hata oluştu:', error);\n      }\n    },\n    async loadSkills() {\n      try {\n        // const response = await fetch('/skills.json');\n        const response = await fetch('/skills.json');\n        if (!response.ok) {\n          throw new Error('Ağ hatası: ' + response.statusText);\n        }\n        const data = await response.json();\n        this.skillsList = data;\n      } catch (error) {\n        console.error('Beceriler yüklenirken bir hata oluştu:', error);\n      }\n    },\n    deleteSkill(index) {\n      this.SelectedSkills.splice(index, 1);\n    },\n    deleteInterest(index) {\n      this.Interests.splice(index, 1);\n    },\n    deleteProject(index) {\n      this.Projects.splice(index, 1);\n    },\n    deleteXP(index) {\n      this.Companies.splice(index, 1);\n    },\n    handleCompany() {\n      const Company = {\n        CompanyName: this.Company.CompanyName,\n        CompanyField: this.Company.CompanyField,\n        Years: this.Company.Years\n      };\n      this.Companies.push(Company);\n      this.Company.CompanyName = '';\n      this.Company.CompanyField = '';\n      this.Company.Years = '';\n    },\n    handleProject() {\n      const Project = {\n        Title: this.Project.Title,\n        Content: this.Project.Content,\n        Time: this.Project.Time,\n        RelatedSkills: this.FilteredSelectedSkill\n      };\n      this.Projects.push(Project);\n      this.Project.Title = '';\n      this.Project.Content = '';\n      this.Project.Time = '';\n      this.FilteredSelectedSkill = [];\n    },\n    handleHobi(Interest) {\n      this.Interests.push(Interest);\n      this.Interest = '';\n    },\n    submitForm() {\n      const cv = {\n        Id: parseInt(this.Id) || 0,\n        ActiveUser: this.ActiveUser,\n        PersonalInfo: this.PersonalInfo || {},\n        ContactInfo: this.ContactInfo || {},\n        EducationInfo: this.EducationInfo || {},\n        PreviousJob: this.PreviousJobs || {},\n        Skills: this.SelectedSkills || [],\n        Projects: this.Projects || [{}],\n        Languages: this.SelectedLanguages || [],\n        Resume: this.Resume || \"\",\n        Companies: this.Companies || [{}],\n        Interests: this.Interests || []\n      };\n      console.log(cv);\n      axios.post('https://localhost:7190/cv', cv).then(() => {\n        this.$router.push('/home');\n      }).catch(err => {\n        console.error('Error creating cv:', err);\n      });\n    },\n    toggleLanguage(Language) {\n      const index = this.SelectedLanguages.indexOf(Language);\n      if (index === -1) {\n        this.SelectedLanguages.push(Language);\n      } else {\n        this.SelectedLanguages.splice(index, 1);\n      }\n    },\n    toggleSkill(Skill) {\n      if (this.SelectedSkills.includes(Skill)) {\n        // Eğer skill zaten seçildiyse, çıkar\n        this.SelectedSkills = this.SelectedSkills.filter(s => s !== Skill);\n      } else {\n        // Eğer skill seçili değilse, ekle\n        this.SelectedSkills.push(Skill);\n      }\n    },\n    toggleFilteredSkill(Skill) {\n      const index = this.FilteredSelectedSkill.indexOf(Skill);\n      if (index === -1) {\n        this.FilteredSelectedSkill.push(Skill);\n      } else {\n        this.FilteredSelectedSkill.splice(index, 1);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.Resume = e.target.result;\n      };\n      if (file) {\n        reader.readAsDataURL(file); // Base64 formatında okur\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Navbar","components","data","Id","ActiveUser","PersonalInfo","FirstName","LastName","Age","Gender","Address","ContactInfo","Email","Phone","EducationInfo","EduLevel","Status","Company","CompanyName","CompanyField","CompanySize","Years","Companies","PreviousJobs","Name","Position","SelectedSkills","Interests","Interest","SelectedLanguages","Project","Title","Content","Time","RelatedSkills","Projects","FilteredSelectedSkill","Resume","searchVal","deleteIndex","locations","location","cities","educationLevel","skillsList","languagesList","computed","filteredSkills","filter","skill","toLowerCase","includes","filteredCities","query","city","mounted","loadSkills","loadCity","created","localStorage","getItem","methods","addCity","push","response","fetch","ok","Error","statusText","json","error","console","deleteLocation","index","splice","deleteSkill","deleteInterest","deleteProject","deleteXP","handleCompany","handleProject","handleHobi","submitForm","cv","parseInt","PreviousJob","Skills","Languages","log","post","then","$router","catch","err","toggleLanguage","Language","indexOf","toggleSkill","Skill","s","toggleFilteredSkill","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL"],"sources":["C:\\Users\\Furkan\\Desktop\\Niso proje Kariyer-App\\kariyer-app-vue\\src\\components\\CvUpload.vue"],"sourcesContent":["<template>\r\n  <Navbar></Navbar>\r\n    <div class=\"container mt-5\">\r\n      \r\n        <!-- Kişisel Bilgiler -->\r\n        <div class=\"mb-3 row\">\r\n          <label for=\"name\" class=\"form-label section-title\">Kişisel bilgiler</label>\r\n          <div class=\"input-group\">\r\n            <input id=\"firstname\" type=\"text\" class=\"form-control\" v-model=\"PersonalInfo.FirstName\" placeholder=\"İsim\" />\r\n            <span class=\"input-group-addon\"></span>\r\n            <input id=\"lastname\" type=\"text\" class=\"form-control\" v-model=\"PersonalInfo.LastName\" placeholder=\"Soy isim\" />\r\n            <span class=\"input-group-addon\"></span>\r\n            <input id=\"age\" type=\"number\" class=\"form-control\" v-model=\"PersonalInfo.Age\"  placeholder=\"Yaş\"/>\r\n            <span class=\"input-group-addon\"></span>\r\n            <select id=\"gender\" class=\"form-select\"  v-model=\"PersonalInfo.Gender\"  >\r\n                <option value=\"\" disabled selected>Cinsiyet</option>\r\n                <option value=\"Male\">Erkek</option>\r\n                <option value=\"Female\">Kadın</option>\r\n                <option value=\"notMention\">Belirmek İstemiyorum</option>\r\n            </select>\r\n          </div>\r\n          <div >\r\n            <textarea name=\"adress\" id=\"adress\" \r\n            class=\"form-control mt-1\"\r\n            placeholder=\"Adres\"\r\n            v-model=\"PersonalInfo.Address\"></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <!--İletişim Bilgileri-->\r\n        <div class=\"mb-3 row\">\r\n          <label for=\"contactInfo\" class=\"form-label section-title\">İletişim Bilgileri</label>\r\n          <div class=\"input-group\">\r\n            <input id=\"email\" type=\"text\" class=\"form-control\" v-model=\"ContactInfo.Email\" placeholder=\"E-mail\" />\r\n            <span class=\"input-group-addon\"></span>\r\n            <input id=\"phoneNumber\" type=\"text\" class=\"form-control\" v-model=\"ContactInfo.Phone\" placeholder=\"Telefon Numarası\" />\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Eğitim Bilgileri-->\r\n        <div class=\"mb-3\">\r\n          <label for=\"eduInfo\" class=\"form-label section-title \">Eğitim Bilgileri</label>\r\n          <div class=\"input-group\">\r\n            <select id=\"eduInfo\" class=\"form-select\" v-model=\"EducationInfo.EduLevel\" >\r\n                <option value=\"\" disabled selected>Eğitim Seviyesi</option>\r\n                <option v-for=\"edu in educationLevel\"\r\n                :key=\"edu\"\r\n                :value=\"edu\">{{ edu }}</option>\r\n            </select>\r\n\r\n            <span class=\"input-group-addon\"></span>\r\n\r\n            <select id=\"eduInfo\" class=\"form-select\"  v-model=\"EducationInfo.Status\"  >\r\n                <option value=\"\" disabled selected>Öğrenim Durumu</option>\r\n                \r\n                <option value=\"graduated\">Mezun</option>\r\n                <option value=\"student\">Öğrenci</option>\r\n            </select>\r\n            </div>\r\n        </div>\r\n        \r\n        <!--Dil seçimi-->\r\n        <div class=\"mb-3\">\r\n          <label for=\"languages\" class=\"section-title\">Konuştuğu Diller</label>\r\n          <div class=\"btn-group flex-container\">\r\n            <button\r\n              v-for=\"language in languagesList\"\r\n              :key=\"language\"\r\n              type=\"button\"\r\n              class=\"btn flex-item\"\r\n              :class=\"{'btn-outline-success': !SelectedLanguages.includes(language), 'btn-success': SelectedLanguages.includes(language)}\"\r\n              @click=\"toggleLanguage(language)\"\r\n            >\r\n              {{ language }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Çalışabilecek Şehir Seçimi-->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"cityInput\" class=\"form-label section-title\" >Şehir Seçin</label>\r\n            <input\r\n            class=\"form-control\"\r\n            list=\"cityOptions\"\r\n            id=\"cityInput\"\r\n            placeholder=\"Şehir adı yazın...\"\r\n            v-model=\"location\"\r\n            @change=\"addCity(location)\"\r\n            \r\n            />\r\n            <datalist id=\"cityOptions\">\r\n            <option v-for=\"city in filteredCities\" :key=\"city\" :value=\"city\" >{{ city }}</option>\r\n            </datalist>\r\n          <div class=\"btn-group col-md-3 mb-2\" role=\"group\" aria-label=\"Basic example\"\r\n              v-for=\"(location, index) in locations\" :key=\"index\"\r\n              @click.prevent=\"deleteLocation(index)\">\r\n              <button \r\n              type=\"button\" class=\"btn btn-success \"\r\n              >{{ location }}</button>\r\n\r\n          </div>\r\n\r\n        <!--İş Deneyimi-->\r\n        <div >\r\n          <label for=\"XP\" class=\"section-title\">İş Deneyimleri</label>\r\n          <div class=\"mb-3\">\r\n            \r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Company.CompanyName\" placeholder=\"Şirket İsmi\">\r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Company.CompanyField\" placeholder=\"Çalıştığı Sektör\">\r\n            <input type=\"number\" class=\"form-control mb-2\" v-model=\"Company.CompanySize\" placeholder=\"Çalışan Sayısı\">\r\n            <input type=\"number\" class=\"form-control\" v-model=\"Company.Years\" placeholder=\"Ne kadar çalıştınız?\">\r\n            \r\n          </div>   \r\n          <div class=\"d-inline  mb-2 mt-1\">\r\n            <button class=\" btn btn-warning\" style=\"float:right\" @click.prevent=\"handleCompany\">Ekle</button> \r\n            <div class=\"btn-group \" role=\"group\" aria-label=\"Basic example\"\r\n            v-for=\"(company, index) in Companies\" :key=\"index\"\r\n            @click=\"deleteXP(index)\"\r\n            >\r\n              <button type=\"button\" class=\"btn btn-success text-uppercase\"\r\n              >{{ company.CompanyName }}</button>\r\n              \r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <!--Bir önceki İş-->\r\n        <div class=\"mt-2\">\r\n          <label for=\"preJob\" class=\"section-title\">En Sonki İşiniz </label>\r\n          <div class=\"mb-3\">\r\n            <input type=\"text\" class=\"form-control mb-2 \" v-model=\"PreviousJobs.Name\" placeholder=\"Şirket İsmi\">\r\n            <input type=\"text\" class=\"form-control mb-2 \" v-model=\"PreviousJobs.Position\" placeholder=\"Poziyonunuz\"> \r\n\r\n          </div>\r\n        </div>\r\n\r\n        \r\n\r\n        <!--Yetenekler-->\r\n        <div class=\"mb-3\">\r\n          <div class=\"input-group-preppend \">\r\n            <label for=\"skills\" class=\"section-title\">Yetenekler</label>\r\n            <span class=\"input-group-addon\"></span>\r\n            <input\r\n            class=\"form-control\"\r\n            id=\"SkillInput\"\r\n            placeholder=\"Yeteneği yazınız..\"\r\n            v-model=\"searchVal\"\r\n            />\r\n          </div>\r\n          <div class=\"btn-group form-container \">\r\n            <button\r\n              v-for=\"skill in filteredSkills\"\r\n              :key=\"skill\"\r\n              type=\"button\"\r\n              class=\"btn flex-item\"\r\n              :class=\"{'btn-outline-success': !SelectedSkills.includes(skill), 'btn-success': SelectedSkills.includes(skill)}\"\r\n              @click=\"toggleSkill(skill)\"\r\n            >\r\n              {{ skill }}\r\n            </button>\r\n          </div>\r\n          <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\"\r\n          v-for=\"(skill, index) in SelectedSkills\" :key=\"index\"\r\n          @click=\"deleteSkill(index)\"\r\n          >\r\n            <button type=\"button\" class=\"btn btn-success\"\r\n            >{{ skill }}</button>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <!--Projeler-->\r\n        <div >\r\n          <label for=\"project\" class=\"section-title\">Projeler</label>\r\n          <div class=\"mb-3\">\r\n            \r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Project.Title\" placeholder=\"Projenin Başlığı\">\r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Project.Content\" placeholder=\"Projenin Açıklaması\">\r\n            <input type=\"number\" class=\"form-control\" v-model=\"Project.Time\" placeholder=\"Ne kadar çalıştınız?\">\r\n             \r\n          </div>  \r\n          <label for=\"\" class=\"form-label\" style=\"border-bottom: 1px solid #333;\">Proje ile ilgili olan yeteneklerinizi seçiniz</label>     \r\n          <div class=\"btn-group form-container \">\r\n            <button\r\n              v-for=\"skill in SelectedSkills\"\r\n              :key=\"skill\"\r\n              type=\"button\"\r\n              class=\"btn flex-item\"\r\n              :class=\"{'btn-outline-success': !FilteredSelectedSkill.includes(skill), 'btn-success': FilteredSelectedSkill.includes(skill)}\"\r\n              @click=\"toggleFilteredSkill(skill)\"\r\n            >\r\n              {{ skill }}\r\n            </button>\r\n            \r\n          </div>\r\n          <div class=\"d-inline-block mb-2 mt-1\">\r\n            <button class=\" btn btn-warning \"  @click.prevent=\"handleProject\">Ekle</button>\r\n            <div class=\"btn-group \" role=\"group\" aria-label=\"Basic example\"\r\n            v-for=\"(project, index) in Projects\" :key=\"index\"\r\n            @click=\"deleteProject(index)\"\r\n            >\r\n              <button type=\"button\" class=\"btn btn-success text-uppercase \"\r\n              >{{ project.Title }}</button>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <!--Hobiler-->\r\n        <div class=\"mb-3 \">\r\n          <label for=\"preJob\" class=\"section-title\">Hobileriniz </label>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Interest\" placeholder=\"Hobileriniz\">\r\n            <span class=\"input-group-addon\"></span>\r\n            <button class=\" btn btn-warning mb-2\"  @click.prevent=\"handleHobi(Interest)\">Ekle</button> \r\n            \r\n          </div>\r\n          \r\n          <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\"\r\n          v-for=\"(interest, index) in Interests\" :key=\"index\"\r\n          @click=\"deleteInterest(index)\"\r\n          >\r\n            <button type=\"button\" class=\"btn btn-success\"\r\n            >{{ interest }}</button>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <!-- Özgeçmiş Yükleme -->\r\n        <div>\r\n          <label for=\"CV\" class=\"section-title\" \r\n          \r\n          >Özgeçmiş Yükleme</label>\r\n          <div class=\"mb-3 \">\r\n            <input id=\"resume\" type=\"file\" class=\"form-control\" @change=\"handleFileUpload\" />\r\n          </div>\r\n        </div>\r\n\r\n\r\n        \r\n\r\n\r\n        <!--Submit Buttonu-->\r\n        <div class=\"d-flex flex-row-reverse\">\r\n            <div class=\"p-2\">\r\n                <button type=\"submit\"\r\n                 class=\"btn btn-primary\"\r\n                 @click.prevent=\"submitForm\" >Kaydet</button>\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n    import axios from 'axios';\r\n    import Navbar from './Navbar.vue';\r\n  export default {\r\n    components: {\r\n        Navbar, \r\n    },\r\n\r\n\r\n    data() {\r\n      return {\r\n        Id:0,\r\n        ActiveUser:0,\r\n        PersonalInfo:{FirstName:'',LastName:'',Age:'',Gender:'',Address:''},\r\n        ContactInfo:{Email:'',Phone:''},\r\n        EducationInfo: {EduLevel:'',Status:''},\r\n\r\n        Company:{CompanyName:'',CompanyField:'',CompanySize:'',Years:''},\r\n        Companies:[],\r\n\r\n        PreviousJobs:{Name:'',Position:''},\r\n\r\n        SelectedSkills: [],\r\n\r\n        Interests:[],\r\n        Interest:'',\r\n\r\n        SelectedLanguages: [],\r\n\r\n        Project: {Title:'',Content:'',Time:'',RelatedSkills:[]},\r\n        Projects:[],\r\n        FilteredSelectedSkill:[],\r\n\r\n        Resume: \"\" ,\r\n\r\n        searchVal:'',\r\n        deleteIndex:'',\r\n        \r\n  \r\n   \r\n        locations:[],\r\n        location:'',\r\n        cities: [],\r\n        educationLevel:['Lise','Önlisans','Lisan','Yüksek Lisans','Doktora'],\r\n        skillsList: [],\r\n        languagesList: ['İngilizce', 'Almanca', 'Fransızca', 'İspanyolca', 'İtalyanca', 'Çince'],\r\n           \r\n        \r\n      }\r\n      \r\n    },\r\n    \r\n    computed: {\r\n        filteredSkills() {\r\n          // Arama girdisine göre skillsList'i filtrele\r\n          return this.skillsList.filter(skill =>\r\n            skill.toLowerCase().includes(this.searchVal.toLowerCase())\r\n          );\r\n        },\r\n        filteredCities() {\r\n          const query = this.location.toLowerCase();\r\n          return this.cities.filter(city =>\r\n            city.toLowerCase().includes(query)\r\n          );\r\n        },\r\n    },\r\n    mounted(){\r\n      this.loadSkills();\r\n      this.loadCity();\r\n      \r\n    },\r\n    created(){\r\n      this.ActiveUser=localStorage.getItem(\"ActiveUserId\");\r\n      \r\n    },\r\n    \r\n    methods:{\r\n      addCity(city) {\r\n        if (city && !this.locations.includes(city)) {\r\n          this.locations.push(city);\r\n          this.location = '';\r\n        }\r\n      },\r\n      async loadCity() {\r\n        try {\r\n          const response = await fetch('/city.json');\r\n          if (!response.ok) {\r\n            throw new Error('Ağ hatası: ' + response.statusText);\r\n          }\r\n          const data = await response.json();\r\n          this.cities = data;\r\n        } catch (error) {\r\n          console.error('Şehirler yüklenirken bir hata oluştu:', error);\r\n        }\r\n      },\r\n      deleteLocation(index) {\r\n        this.locations.splice(index, 1);\r\n      },\r\n      async loadSkills() {\r\n        try {\r\n          const response = await fetch('/skills.json');\r\n          if (!response.ok) {\r\n            throw new Error('Ağ hatası: ' + response.statusText);\r\n          }\r\n          const data = await response.json();\r\n          this.skillsList = data;\r\n        } catch (error) {\r\n          console.error('Beceriler yüklenirken bir hata oluştu:', error);\r\n        }\r\n      },\r\n      async loadSkills() {\r\n        try {\r\n          // const response = await fetch('/skills.json');\r\n          const response = await fetch('/skills.json');\r\n          if (!response.ok) {\r\n            throw new Error('Ağ hatası: ' + response.statusText);\r\n          }\r\n          const data = await response.json();\r\n          this.skillsList = data;\r\n        } catch (error) {\r\n          console.error('Beceriler yüklenirken bir hata oluştu:', error);\r\n        }\r\n      },\r\n      deleteSkill(index){\r\n        this.SelectedSkills.splice(index, 1);\r\n      },\r\n      deleteInterest(index){\r\n        this.Interests.splice(index, 1);\r\n      },\r\n      deleteProject(index){\r\n        this.Projects.splice(index, 1);\r\n      },\r\n      deleteXP(index){\r\n        this.Companies.splice(index, 1);\r\n      },\r\n      handleCompany(){\r\n        const Company={\r\n          CompanyName:this.Company.CompanyName,\r\n          CompanyField:this.Company.CompanyField,\r\n          Years:this.Company.Years\r\n        };\r\n        this.Companies.push(Company);\r\n        \r\n        this.Company.CompanyName = '';\r\n        this.Company.CompanyField = '';\r\n        this.Company.Years = '';\r\n        \r\n\r\n      },\r\n      handleProject(){\r\n        const Project={\r\n          Title:this.Project.Title,\r\n          Content:this.Project.Content,\r\n          Time:this.Project.Time,\r\n          RelatedSkills:this.FilteredSelectedSkill\r\n        };\r\n        this.Projects.push(Project);\r\n        \r\n        this.Project.Title = '';\r\n        this.Project.Content = '';\r\n        this.Project.Time = '';\r\n        this.FilteredSelectedSkill=[];\r\n        \r\n\r\n      },\r\n      handleHobi(Interest){\r\n        this.Interests.push(Interest);\r\n        this.Interest='';\r\n\r\n\r\n\r\n      },\r\n        submitForm() {\r\n          const cv = {\r\n            Id:parseInt(this.Id)||0,\r\n            ActiveUser:this.ActiveUser,\r\n            PersonalInfo: this.PersonalInfo||{},\r\n            ContactInfo: this.ContactInfo||{},\r\n            EducationInfo: this.EducationInfo||{},\r\n            PreviousJob: this.PreviousJobs||{},\r\n            Skills: this.SelectedSkills||[],\r\n            Projects: this.Projects||[{}],\r\n            Languages: this.SelectedLanguages||[],\r\n            Resume: this.Resume||\"\",\r\n            Companies: this.Companies||[{}],\r\n            Interests: this.Interests||[],\r\n          };\r\n          console.log(cv);\r\n\r\n\r\n          axios.post('https://localhost:7190/cv', cv)\r\n          .then(() => {\r\n            this.$router.push('/home');\r\n          })\r\n          .catch(err => {\r\n            console.error('Error creating cv:', err);\r\n          });\r\n        \r\n        },\r\n        toggleLanguage(Language) {\r\n          const index = this.SelectedLanguages.indexOf(Language);\r\n          if (index === -1) {\r\n            this.SelectedLanguages.push(Language);\r\n          } else {\r\n            this.SelectedLanguages.splice(index, 1);\r\n          }\r\n        },\r\n        \r\n        toggleSkill(Skill) {\r\n          if (this.SelectedSkills.includes(Skill)) {\r\n            // Eğer skill zaten seçildiyse, çıkar\r\n            this.SelectedSkills = this.SelectedSkills.filter(s => s !== Skill);\r\n          } else {\r\n            // Eğer skill seçili değilse, ekle\r\n            this.SelectedSkills.push(Skill);\r\n          }\r\n        },\r\n        toggleFilteredSkill(Skill) {\r\n          const index = this.FilteredSelectedSkill.indexOf(Skill);\r\n          if (index === -1) {\r\n            this.FilteredSelectedSkill.push(Skill);\r\n          } else {\r\n            this.FilteredSelectedSkill.splice(index, 1);\r\n          }\r\n        },\r\n        handleFileUpload(event) {\r\n          const file = event.target.files[0];\r\n          const reader = new FileReader();\r\n\r\n          reader.onload = (e) => {\r\n            this.Resume = e.target.result;\r\n          };\r\n\r\n          if (file) {\r\n            reader.readAsDataURL(file); // Base64 formatında okur\r\n          }\r\n        },\r\n        }\r\n      };\r\n  </script>\r\n  \r\n  <style>\r\n  \r\n  .form-container {\r\n  max-height: 230px; /* İhtiyaca göre ayarlayın */\r\n  overflow-y: auto;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  background: #f9f9f9;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));\r\n  grid-template-rows: repeat(auto-fill, minmax(75px, 1fr));\r\n  gap: 10px;\r\n}\r\n  .section-title {\r\n    position: relative;\r\n    display: inline-block;\r\n    font-weight: 500;\r\n    padding-bottom: 0.1rem;    \r\n    border-bottom: 2px solid #333; /* Çizgi rengi ve kalınlığı */\r\n    margin-top: 1rem; /* Başlıklar arasında boşluk */\r\n    margin-bottom: 1rem; /* Başlıklar arasında boşluk */\r\n  }\r\n  .flex-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  .flex-item {\r\n    margin: 5px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}