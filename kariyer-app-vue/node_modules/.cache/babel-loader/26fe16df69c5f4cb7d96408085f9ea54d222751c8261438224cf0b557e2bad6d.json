{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"input-group mb-3\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"labe\",\n  class: \"form-label\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"mb-3\"\n};\nconst _hoisted_5 = {\n  class: \"form-check\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-check-label\",\n  for: \"publishedCheck\"\n}, \"Yayınlanmış\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"form-check\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-check-label\",\n  for: \"unpublishedCheck\"\n}, \"Yayınlanmamış\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"table table-hover\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"İşlemler\", -1 /* HOISTED */);\nconst _hoisted_13 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchVal = $event),\n    type: \"text\",\n    class: \"form-control\",\n    id: \"label\",\n    placeholder: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchVal]])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.showPublished = $event),\n    type: \"checkbox\",\n    class: \"form-check-input\",\n    id: \"publishedCheck\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, _ctx.showPublished]]), _hoisted_6]), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.showUnpublished = $event),\n    type: \"checkbox\",\n    class: \"form-check-input\",\n    id: \"unpublishedCheck\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, _ctx.showUnpublished]]), _hoisted_8])]), _createElementVNode(\"table\", _hoisted_9, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    scope: \"col\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.sortTable('index'))\n  }, [_createTextVNode(\" Form ID \"), $data.sortKey === 'index' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString($data.sortOrder === 'asc' ? '▲' : '▼'), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"th\", {\n    scope: \"col\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.sortTable('UserId'))\n  }, [_createTextVNode(\" User ID \"), $data.sortKey === 'UserId' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString($data.sortOrder === 'asc' ? '▲' : '▼'), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _hoisted_12])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedCVs, (cv, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: _ctx.advert.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(cv.Id || \" \"), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(this.ActiveUserId || \" \"), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: $event => $options.editButton(cv.Id)\n    }, \"Değiştir\", 8 /* PROPS */, _hoisted_13), _createElementVNode(\"button\", {\n      class: \"btn btn-danger\",\n      onClick: _cache[5] || (_cache[5] = $event => _ctx.deleteAdvert(_ctx.advert.id))\n    }, \"Sil\")])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","key","scope","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_cache","$event","$data","searchVal","type","id","placeholder","_hoisted_4","_hoisted_5","_ctx","showPublished","_hoisted_6","_hoisted_7","showUnpublished","_hoisted_8","_hoisted_9","onClick","sortTable","_createTextVNode","sortKey","_hoisted_10","_toDisplayString","sortOrder","_createCommentVNode","_hoisted_11","_hoisted_12","_Fragment","_renderList","$options","sortedCVs","cv","index","advert","Id","ActiveUserId","editButton","_hoisted_13","deleteAdvert"],"sources":["C:\\Users\\Furkan\\Desktop\\Niso proje Kariyer-App\\kariyer-app-vue\\src\\components\\Employee\\HomeViewEmployee.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"input-group mb-3\">\r\n      <label for=\"labe\" class=\"form-label\"></label>\r\n      <input v-model=\"searchVal\" type=\"text\" class=\"form-control\" id=\"label\" placeholder=\"\">\r\n      \r\n    </div>\r\n\r\n    \r\n    <div class=\"mb-3\">\r\n      <div class=\"form-check\">\r\n        <input v-model=\"showPublished\" type=\"checkbox\" class=\"form-check-input\" id=\"publishedCheck\">\r\n        <label class=\"form-check-label\" for=\"publishedCheck\">Yayınlanmış</label>\r\n      </div>\r\n      <div class=\"form-check\">\r\n        <input v-model=\"showUnpublished\" type=\"checkbox\" class=\"form-check-input\" id=\"unpublishedCheck\">\r\n        <label class=\"form-check-label\" for=\"unpublishedCheck\">Yayınlanmamış</label>\r\n      </div>\r\n    </div>\r\n    \r\n    <table class=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\" @click=\"sortTable('index')\">\r\n            Form ID \r\n            <span v-if=\"sortKey === 'index'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\r\n          </th>\r\n          <th scope=\"col\" @click=\"sortTable('UserId')\">\r\n            User ID \r\n            <span v-if=\"sortKey === 'UserId'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\r\n          </th>\r\n          <th scope=\"col\">İşlemler</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(cv,index) in sortedCVs\" :key=\"advert.id\">\r\n          <td>{{ cv.Id || \" \" }}</td>\r\n          <td>{{ this.ActiveUserId || \" \" }}</td>\r\n          \r\n          <td>\r\n            <button class=\"btn btn-primary\" @click=\"editButton(cv.Id)\">Değiştir</button>\r\n            <button class=\"btn btn-danger\" @click=\"deleteAdvert(advert.id)\">Sil</button>\r\n            \r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n      \r\n  <script>\r\n  import axios from 'axios';\r\n  export default{\r\n        props:{\r\n            id: {\r\n        type: Number,\r\n        required: false\r\n        },\r\n        user: {\r\n        type: Object,\r\n        default: () => ({})\r\n        }\r\n        },\r\n      data(){\r\n          return{\r\n              ActiveUserId:-1,\r\n              ActiveUserType:'',\r\n              adverts:[],\r\n              matchedCv:[],\r\n              cvs:[],\r\n              searchVal:'',\r\n              sortKey: '',\r\n              sortOrder: 'asc',\r\n          }\r\n      },\r\n      computed: {\r\n        filteredCVs() {\r\n          return this.cvs.filter(cv => {\r\n              \r\n              \r\n              const id = cv.Id ? cv.Id.toString().includes(this.searchVal) : true;\r\n            \r\n\r\n              return id\r\n            });\r\n        },\r\n        sortedCVs() {\r\n          return this.filteredCVs.slice().sort((a, b) => {\r\n            let modifier = this.sortOrder === 'asc' ? 1 : -1;\r\n            if (this.sortKey === 'index') {\r\n              return (a.index - b.index) * modifier;\r\n            }\r\n            if (a[this.sortKey] < b[this.sortKey]) return -1 * modifier;\r\n            if (a[this.sortKey] > b[this.sortKey]) return 1 * modifier;\r\n            return 0;\r\n          });\r\n        }\r\n      },\r\n      mounted() {\r\n        this.ActiveUserId=parseInt(localStorage.getItem(\"ActiveUserId\"));\r\n        this.ActiveUserType=localStorage.getItem(\"ActiveUserType\");\r\n        console.log(\"a\");\r\n        axios.get(`https://localhost:7190/cv/getRelatedCv?id=${this.user.id}`)\r\n        .then(res => {\r\n          this.cvs = res.data;\r\n          console.log(this.cvs);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching adverts:', err);\r\n        });\r\n\r\n        axios.get(`https://localhost:7190/matches/cv?id=${this.user.id}`)\r\n        .then(res => {\r\n          this.adverts = res.data;\r\n          console.log(this.adverts);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching adverts:', err);\r\n        });\r\n      },\r\n      methods:{\r\n        editButton(id) {\r\n          try {\r\n            console.log(\"Eşleşen Profiller butonuna tıklandı.\");\r\n            this.$router.push({ name: 'cv', params: { id } });\r\n            console.log(\"Rota değişikliği başarılı.\");\r\n          } catch (error) {\r\n            console.error(\"Rota değişikliği sırasında bir hata oluştu:\", error);\r\n          }\r\n        },\r\n        \r\n  \r\n  \r\n        \r\n      },\r\n      \r\n  }\r\n  </script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}