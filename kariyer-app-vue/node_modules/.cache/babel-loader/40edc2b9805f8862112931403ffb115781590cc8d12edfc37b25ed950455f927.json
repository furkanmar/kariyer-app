{"ast":null,"code":"import Navbar from './components/Navbar.vue';\nexport default {\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      theme: 'dark'\n    };\n  },\n  computed: {\n    themeClass() {\n      return this.theme === 'dark' ? 'bg-dark text-light' : 'bg-light text-dark';\n    }\n  },\n  created() {\n    const savedTheme = localStorage.getItem('theme') || 'dark';\n    this.theme = savedTheme;\n  },\n  methods: {\n    handleThemeChange(newTheme) {\n      this.theme = newTheme;\n    }\n  }\n};","map":{"version":3,"names":["Navbar","components","data","theme","computed","themeClass","created","savedTheme","localStorage","getItem","methods","handleThemeChange","newTheme"],"sources":["C:\\Users\\Furkan\\Documents\\Pratik kod\\NisoPratik\\kariyer-app\\src\\App.vue"],"sourcesContent":["<template>\n    <div :class=\"themeClass\">\n      <Navbar @themeChanged=\"handleThemeChange\" />\n      <router-view></router-view>\n    </div>\n  </template>\n  \n  <script>\n  import Navbar from './components/Navbar.vue';\n  \n  export default {\n    components: {\n      Navbar,\n    },\n    data() {\n      return {\n        theme: 'dark'\n      };\n    },\n    computed: {\n      themeClass() {\n        return this.theme === 'dark' ? 'bg-dark text-light' : 'bg-light text-dark';\n      }\n    },\n    created() {\n      const savedTheme = localStorage.getItem('theme') || 'dark';\n      this.theme = savedTheme;\n    },\n    methods: {\n      handleThemeChange(newTheme) {\n        this.theme = newTheme;\n      }\n    }\n  };\n  </script>\n  "],"mappings":"AAQE,OAAOA,MAAK,MAAO,yBAAyB;AAE5C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACF,KAAI,KAAM,MAAK,GAAI,oBAAmB,GAAI,oBAAoB;IAC5E;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,MAAMC,UAAS,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,KAAK,MAAM;IAC1D,IAAI,CAACN,KAAI,GAAII,UAAU;EACzB,CAAC;EACDG,OAAO,EAAE;IACPC,iBAAiBA,CAACC,QAAQ,EAAE;MAC1B,IAAI,CAACT,KAAI,GAAIS,QAAQ;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}