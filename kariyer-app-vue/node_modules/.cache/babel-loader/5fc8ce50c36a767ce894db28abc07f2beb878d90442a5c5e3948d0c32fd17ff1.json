{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"content-area\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Navbar always on top \"), $data.showNavbar ? (_openBlock(), _createBlock(_component_Navbar, {\n    key: 0,\n    user: $data.user,\n    onExitSuccess: _ctx.handleExit\n  }, null, 8 /* PROPS */, [\"user\", \"onExitSuccess\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Main content area with background image \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_view, {\n    user: $data.user,\n    onLoginSuccess: $options.handleLoginSuccess\n  }, null, 8 /* PROPS */, [\"user\", \"onLoginSuccess\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","$data","showNavbar","_createBlock","_component_Navbar","key","user","onExitSuccess","_ctx","handleExit","_createElementVNode","_hoisted_2","_createVNode","_component_router_view","onLoginSuccess","$options","handleLoginSuccess"],"sources":["C:\\Users\\Furkan\\Desktop\\Niso proje Kariyer-App\\kariyer-app-vue\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- Navbar always on top -->\n    <Navbar \n      v-if=\"showNavbar\" \n      :user=\"user\"\n      @exit-success=\"handleExit\"\n    />\n\n    <!-- Main content area with background image -->\n    <div class=\"content-area\">\n      <router-view\n        :user=\"user\"\n        @login-success=\"handleLoginSuccess\"\n      />\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport Navbar from './components/Navbar.vue';\n\n\n\n\n\n\nexport default{\n    components:{\n      Navbar\n    },\n    data(){\n      return{\n        showNavbar:false,\n        user:null,\n        \n      }\n    },\n    created() {\n      \n      const activeUserId = localStorage.getItem(\"ActiveUserId\");\n      const activeUserType = localStorage.getItem(\"ActiveUserType\");\n      \n      if (activeUserId && activeUserId !== '-1') {\n        this.user = {\n          id: activeUserId,\n          type: activeUserType\n        };\n        this.showNavbar = true;\n      }\n    },\n    \n    \n\n    methods: {\n    handleLoginSuccess(user) {\n      this.user = user;\n      localStorage.setItem(\"ActiveUserId\",user.id);\n      localStorage.setItem(\"ActiveUserType\",user.type);\n      \n      this.showNavbar = true;\n      this.$router.push('/home');\n    },\n    hanldeExit(){\n      localStorage.setItem(\"ActiveUserId\",-1);\n      localStorage.setItem(\"ActiveUserType\",\"\");\n      this.showNavbar=false;\n    },\n  }\n    \n    \n\n}\n    \n    \n</script>\n<style scoped>\n.app-container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.content-area {\n  flex: 1;\n  background-image: url('@/../public/stairs.jpg'); /* Arka plan resmini buraya ekleyin */\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAe;;EASnBA,KAAK,EAAC;AAAc;;;;uBAT3BC,mBAAA,CAeM,OAfNC,UAeM,GAdJC,mBAAA,0BAA6B,EAErBC,KAAA,CAAAC,UAAU,I,cADlBC,YAAA,CAIEC,iBAAA;IAPNC,GAAA;IAKOC,IAAI,EAAEL,KAAA,CAAAK,IAAI;IACVC,aAAY,EAAEC,IAAA,CAAAC;wDANrBT,mBAAA,gBASIA,mBAAA,6CAAgD,EAChDU,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAGEC,sBAAA;IAFCP,IAAI,EAAEL,KAAA,CAAAK,IAAI;IACVQ,cAAa,EAAEC,QAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}