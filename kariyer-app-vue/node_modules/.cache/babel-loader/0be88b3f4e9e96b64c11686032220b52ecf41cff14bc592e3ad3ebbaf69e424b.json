{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: {\n    id: {\n      type: Number,\n      required: false\n    },\n    editMode: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      Id: 0,\n      PersonalInfo: {\n        FirstName: '',\n        LastName: '',\n        Age: '',\n        Gender: '',\n        Address: ''\n      },\n      ContactInfo: {\n        Email: '',\n        Phone: ''\n      },\n      EducationInfo: {\n        EduLevel: '',\n        Status: ''\n      },\n      Company: {\n        CompanyName: '',\n        CompanyField: '',\n        CompanySize: 0,\n        Years: 0\n      },\n      Companies: [],\n      PreviousJob: {\n        Name: '',\n        Position: ''\n      },\n      SelectedSkills: [],\n      Interests: [],\n      Interest: '',\n      ExpectedValues: {\n        locations: [],\n        expectedSalary: 0,\n        expectedWorkHours: ''\n      },\n      SelectedLanguages: [],\n      Project: {\n        Title: '',\n        Content: '',\n        Time: 0,\n        RelatedSkills: []\n      },\n      Projects: [],\n      FilteredSelectedSkill: [],\n      Resume: \"\",\n      searchVal: '',\n      deleteIndex: '',\n      location: '',\n      cities: [],\n      educationLevel: ['Lise', 'Önlisans', 'Lisan', 'Yüksek Lisans', 'Doktora'],\n      skillsList: [],\n      languagesList: ['İngilizce', 'Almanca', 'Fransızca', 'İspanyolca', 'İtalyanca', 'Çince'],\n      mode: this.editMode\n    };\n  },\n  computed: {\n    filteredSkills() {\n      // Arama girdisine göre skillsList'i filtrele\n      return this.skillsList.filter(skill => skill.toLowerCase().includes(this.searchVal.toLowerCase()));\n    },\n    filteredCities() {\n      const query = this.location.toLowerCase();\n      return this.cities.filter(city => city.toLowerCase().includes(query));\n    }\n  },\n  mounted() {\n    this.loadSkills();\n    this.loadCity();\n  },\n  created() {\n    this.ActiveUser = localStorage.getItem(\"ActiveUserId\");\n    if (this.mode) {\n      console.log(this.id);\n      axios.get(`http://localhost:7190/cv/${this.id}`).then(res => {\n        const cv = JSON.parse(JSON.stringify(res.data));\n        console.log(cv);\n        this.loadCv(cv);\n      }).catch(err => {\n        console.error('Error fetching advert for editing:', err);\n      });\n    }\n  },\n  methods: {\n    loadCv(cv) {\n      this.Id = cv.id;\n      this.PersonalInfo = {\n        FirstName: cv.personalInfo.firstName || '',\n        LastName: cv.personalInfo.lastName || '',\n        Age: cv.personalInfo.age || '',\n        Gender: cv.personalInfo.gender || '',\n        Address: cv.personalInfo.address || ''\n      };\n      this.ContactInfo = {\n        Email: cv.contactInfo.email || '',\n        Phone: cv.contactInfo.phone || ''\n      };\n      this.EducationInfo = {\n        EduLevel: cv.educationInfo.eduLevel || '',\n        Status: cv.educationInfo.status || ''\n      };\n      this.Companies = cv.companies.map(company => ({\n        CompanyName: company.companyName || '',\n        CompanyField: company.companyField || '',\n        CompanySize: company.companySize || 0,\n        Years: company.years || 0\n      }));\n      this.PreviousJob = {\n        Name: cv.previousJob.name || '',\n        Position: cv.previousJob.position || ''\n      };\n      this.ExpectedValues = {\n        locations: cv.expectedValues.locations || [],\n        expectedSalary: cv.expectedValues.expectedSalary || 0,\n        expectedWorkHours: cv.expectedValues.expectedWorkHours || ''\n      };\n      this.SelectedSkills = cv.skills || [];\n      this.Interests = cv.interests || [];\n      this.SelectedLanguages = cv.languages || [];\n      this.Projects = cv.projects.map(project => ({\n        Title: project.title || '',\n        Content: project.content || '',\n        Time: project.time || 0,\n        RelatedSkills: project.relatedSkills || []\n      }));\n      this.Resume = cv.resume || '';\n    },\n    addCity(city) {\n      if (city && !this.ExpectedValues.locations.includes(city)) {\n        this.ExpectedValues.locations.push(city);\n        this.location = '';\n      }\n    },\n    async loadCity() {\n      try {\n        const response = await fetch('/city.json');\n        if (!response.ok) {\n          throw new Error('Ağ hatası: ' + response.statusText);\n        }\n        const data = await response.json();\n        this.cities = data;\n      } catch (error) {\n        console.error('Şehirler yüklenirken bir hata oluştu:', error);\n      }\n    },\n    deleteLocation(index) {\n      this.ExpectedValues.locations.splice(index, 1);\n    },\n    async loadSkills() {\n      try {\n        const response = await fetch('/skills.json');\n        if (!response.ok) {\n          throw new Error('Ağ hatası: ' + response.statusText);\n        }\n        const data = await response.json();\n        this.skillsList = data;\n      } catch (error) {\n        console.error('Beceriler yüklenirken bir hata oluştu:', error);\n      }\n    },\n    async loadSkills() {\n      try {\n        // const response = await fetch('/skills.json');\n        const response = await fetch('/skills.json');\n        if (!response.ok) {\n          throw new Error('Ağ hatası: ' + response.statusText);\n        }\n        const data = await response.json();\n        this.skillsList = data;\n      } catch (error) {\n        console.error('Beceriler yüklenirken bir hata oluştu:', error);\n      }\n    },\n    deleteSkill(index) {\n      this.SelectedSkills.splice(index, 1);\n    },\n    deleteInterest(index) {\n      this.Interests.splice(index, 1);\n    },\n    deleteProject(index) {\n      this.Projects.splice(index, 1);\n    },\n    deleteXP(index) {\n      this.Companies.splice(index, 1);\n    },\n    handleCompany() {\n      const Company = {\n        CompanyName: this.Company.CompanyName,\n        CompanyField: this.Company.CompanyField,\n        Years: parseInt(this.Company.Years),\n        CompanySize: parseInt(this.Company.CompanySize)\n      };\n      this.Companies.push(Company);\n      this.Company.CompanyName = '';\n      this.Company.CompanyField = '';\n      this.Company.Years = '';\n      this.Company.CompanySize = '';\n    },\n    handleProject() {\n      const Project = {\n        Title: this.Project.Title,\n        Content: this.Project.Content,\n        Time: parseInt(this.Project.Time) || 0,\n        RelatedSkills: this.FilteredSelectedSkill\n      };\n      this.Projects.push(Project);\n      this.Project.Title = '';\n      this.Project.Content = '';\n      this.Project.Time = '';\n      this.FilteredSelectedSkill = [];\n    },\n    handleHobi(Interest) {\n      this.Interests.push(Interest);\n      this.Interest = '';\n    },\n    notifyPython() {\n      axios.post('http://localhost:5000/api/trigger').then(() => {\n        console.log(\"Python servisi tetiklendi.\");\n      }).catch(error => {\n        console.error(\"Python tetikleme hatası:\", error);\n      });\n    },\n    submitForm() {\n      const cv = {\n        Id: parseInt(this.Id) || 0,\n        ActiveUser: parseInt(this.ActiveUser),\n        PersonalInfo: {\n          FirstName: this.PersonalInfo.FirstName || '',\n          LastName: this.PersonalInfo.LastName || '',\n          Age: this.PersonalInfo.Age || '',\n          Gender: this.PersonalInfo.Gender || '',\n          Address: this.PersonalInfo.Address || ''\n        },\n        ContactInfo: {\n          Email: this.ContactInfo.Email || '',\n          Phone: this.ContactInfo.Phone || ''\n        },\n        EducationInfo: {\n          EduLevel: this.EducationInfo.EduLevel || '',\n          Status: this.EducationInfo.Status || ''\n        },\n        Companies: this.Companies.length > 0 ? this.Companies : [{\n          CompanyName: '',\n          CompanyField: '',\n          CompanySize: 0,\n          Years: 0\n        }],\n        PreviousJob: {\n          Name: this.PreviousJob.Name || '',\n          Position: this.PreviousJob.Position || ''\n        },\n        Skills: this.SelectedSkills || [],\n        Interests: this.Interests || [],\n        ExpectedValues: {\n          locations: this.ExpectedValues.locations || [],\n          expectedSalary: this.ExpectedValues.expectedSalary || 0,\n          expectedWorkHours: this.ExpectedValues.expectedWorkHours || ''\n        },\n        Languages: this.SelectedLanguages || [],\n        Projects: this.Projects.length > 0 ? this.Projects : [{\n          Title: '',\n          Content: '',\n          Time: 0,\n          RelatedSkills: []\n        }],\n        Resume: this.Resume || \"\"\n      };\n\n      // cv objesini kullanarak gerekli işlemleri burada yapabilirsiniz.\n      console.log(cv);\n      if (this.id) {\n        // Düzenleme modu: PUT isteği\n\n        axios.put(`http://localhost:7190/cv/`, cv).then(() => {\n          this.notifyPython();\n          this.$router.push('/employeeHome');\n        }).catch(err => {\n          console.error('Error updating advert:', err);\n        });\n      } else {\n        // Yeni ilan oluşturma modu: POST isteği\n        axios.post('http://localhost:7190/cv', cv).then(() => {\n          this.notifyPython();\n          this.$router.push('/employeeHome');\n        }).catch(err => {\n          console.error('Error creating advert:', err);\n        });\n      }\n    },\n    toggleLanguage(Language) {\n      const index = this.SelectedLanguages.indexOf(Language);\n      if (index === -1) {\n        this.SelectedLanguages.push(Language);\n      } else {\n        this.SelectedLanguages.splice(index, 1);\n      }\n    },\n    toggleSkill(Skill) {\n      if (this.SelectedSkills.includes(Skill)) {\n        // Eğer skill zaten seçildiyse, çıkar\n        this.SelectedSkills = this.SelectedSkills.filter(s => s !== Skill);\n      } else {\n        // Eğer skill seçili değilse, ekle\n        this.SelectedSkills.push(Skill);\n      }\n    },\n    toggleFilteredSkill(Skill) {\n      const index = this.FilteredSelectedSkill.indexOf(Skill);\n      if (index === -1) {\n        this.FilteredSelectedSkill.push(Skill);\n      } else {\n        this.FilteredSelectedSkill.splice(index, 1);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.Resume = e.target.result;\n      };\n      if (file) {\n        reader.readAsDataURL(file); // Base64 formatında okur\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","id","type","Number","required","editMode","Boolean","data","Id","PersonalInfo","FirstName","LastName","Age","Gender","Address","ContactInfo","Email","Phone","EducationInfo","EduLevel","Status","Company","CompanyName","CompanyField","CompanySize","Years","Companies","PreviousJob","Name","Position","SelectedSkills","Interests","Interest","ExpectedValues","locations","expectedSalary","expectedWorkHours","SelectedLanguages","Project","Title","Content","Time","RelatedSkills","Projects","FilteredSelectedSkill","Resume","searchVal","deleteIndex","location","cities","educationLevel","skillsList","languagesList","mode","computed","filteredSkills","filter","skill","toLowerCase","includes","filteredCities","query","city","mounted","loadSkills","loadCity","created","ActiveUser","localStorage","getItem","console","log","get","then","res","cv","JSON","parse","stringify","loadCv","catch","err","error","methods","personalInfo","firstName","lastName","age","gender","address","contactInfo","email","phone","educationInfo","eduLevel","status","companies","map","company","companyName","companyField","companySize","years","previousJob","name","position","expectedValues","skills","interests","languages","projects","project","title","content","time","relatedSkills","resume","addCity","push","response","fetch","ok","Error","statusText","json","deleteLocation","index","splice","deleteSkill","deleteInterest","deleteProject","deleteXP","handleCompany","parseInt","handleProject","handleHobi","notifyPython","post","submitForm","length","Skills","Languages","put","$router","toggleLanguage","Language","indexOf","toggleSkill","Skill","s","toggleFilteredSkill","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL"],"sources":["C:\\Users\\Furkan\\Desktop\\Niso proje Kariyer-App\\kariyer-app-vue\\src\\components\\Employee\\CvUpload.vue"],"sourcesContent":["<template>\r\n  \r\n    <div class=\"container mt-5\">\r\n      \r\n        <!-- Kişisel Bilgiler -->\r\n        <div class=\"mb-3 row\">\r\n          <label for=\"name\" class=\"form-label section-title\">Kişisel bilgiler</label>\r\n          <div class=\"input-group\">\r\n            <input id=\"firstname\" type=\"text\" class=\"form-control\" v-model=\"PersonalInfo.FirstName\" placeholder=\"İsim\" />\r\n            <span class=\"input-group-addon\"></span>\r\n            <input id=\"lastname\" type=\"text\" class=\"form-control\" v-model=\"PersonalInfo.LastName\" placeholder=\"Soy isim\" />\r\n            <span class=\"input-group-addon\"></span>\r\n            <input id=\"age\" type=\"text\" class=\"form-control\" v-model=\"PersonalInfo.Age\"  placeholder=\"Yaş\"/>\r\n            <span class=\"input-group-addon\"></span>\r\n            <select id=\"gender\" class=\"form-select\"  v-model=\"PersonalInfo.Gender\"  >\r\n                <option value=\"\" disabled selected>Cinsiyet</option>\r\n                <option value=\"Male\">Erkek</option>\r\n                <option value=\"Female\">Kadın</option>\r\n                <option value=\"notMention\">Belirmek İstemiyorum</option>\r\n            </select>\r\n          </div>\r\n          <div >\r\n            <textarea name=\"adress\" id=\"adress\" \r\n            class=\"form-control mt-1\"\r\n            placeholder=\"Adres\"\r\n            v-model=\"PersonalInfo.Address\"></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <!--İletişim Bilgileri-->\r\n        <div class=\"mb-3 row\">\r\n          <label for=\"contactInfo\" class=\"form-label section-title\">İletişim Bilgileri</label>\r\n          <div class=\"input-group\">\r\n            <input id=\"email\" type=\"text\" class=\"form-control\" v-model=\"ContactInfo.Email\" placeholder=\"E-mail\" />\r\n            <span class=\"input-group-addon\"></span>\r\n            <input id=\"phoneNumber\" type=\"text\" class=\"form-control\" v-model=\"ContactInfo.Phone\" placeholder=\"Telefon Numarası\" />\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Eğitim Bilgileri-->\r\n        <div class=\"mb-3\">\r\n          <label for=\"eduInfo\" class=\"form-label section-title \">Eğitim Bilgileri</label>\r\n          <div class=\"input-group\">\r\n            <select id=\"eduInfo\" class=\"form-select\" v-model=\"EducationInfo.EduLevel\" >\r\n                <option value=\"\" disabled selected>Eğitim Seviyesi</option>\r\n                <option v-for=\"edu in educationLevel\"\r\n                :key=\"edu\"\r\n                :value=\"edu\">{{ edu }}</option>\r\n            </select>\r\n\r\n            <span class=\"input-group-addon\"></span>\r\n\r\n            <select id=\"eduInfo\" class=\"form-select\"  v-model=\"EducationInfo.Status\"  >\r\n                <option value=\"\" disabled selected>Öğrenim Durumu</option>\r\n                \r\n                <option value=\"graduated\">Mezun</option>\r\n                <option value=\"student\">Öğrenci</option>\r\n            </select>\r\n            </div>\r\n        </div>\r\n        \r\n        <!--Dil seçimi-->\r\n        <div class=\"mb-3\">\r\n          <label for=\"languages\" class=\"section-title\">Konuştuğu Diller</label>\r\n          <div class=\"btn-group flex-container\">\r\n            <button\r\n              v-for=\"language in languagesList\"\r\n              :key=\"language\"\r\n              type=\"button\"\r\n              class=\"btn flex-item\"\r\n              :class=\"{'btn-outline-success': !SelectedLanguages.includes(language), 'btn-success': SelectedLanguages.includes(language)}\"\r\n              @click=\"toggleLanguage(language)\"\r\n            >\r\n              {{ language }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Çalışma şartları beklentisi-->\r\n        <div class=\"row\">\r\n          <label  class=\"form-label section-title\">Çalışma Şartları Beklentileriniz</label>\r\n          <div class=\"mb-1\">\r\n              <label for=\"cityInput\" class=\"form-label section-title\" >Çalışabileceğiniz Şehirleri Seçiniz</label>\r\n              <input\r\n              class=\"form-control\"\r\n              list=\"cityOptions\"\r\n              id=\"cityInput\"\r\n              placeholder=\"Şehir adı yazın...\"\r\n              v-model=\"location\"\r\n              @change=\"addCity(location)\"\r\n              \r\n              />\r\n              <datalist id=\"cityOptions\">\r\n              <option v-for=\"city in filteredCities\" :key=\"city\" :value=\"city\" >{{ city }}</option>\r\n              </datalist>\r\n            <div class=\"btn-group col-md-3 mb-2\" role=\"group\" aria-label=\"Basic example\"\r\n                v-for=\"(location, index) in ExpectedValues.locations\" :key=\"index\"\r\n                @click.prevent=\"deleteLocation(index)\">\r\n                <button \r\n                type=\"button\" class=\"btn btn-success \"\r\n                >{{ location }}</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"mb-1\">\r\n            <label for=\"expedtedSalary\" class=\"form-label section-title\">Maaş beklentiniz</label>\r\n            <input type=\"number\" \r\n            class=\"form-control\"\r\n            id=\"expectedSalary\"\r\n            v-model=\"ExpectedValues.expectedSalary\">\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          \r\n          <div class=\"mb-1\">\r\n            <label for=\"workingHours\" class=\"form-label section-title\">Çalışma Saatleri</label>\r\n            <select id=\"workingHours\" class=\"form-select\" v-model=\"ExpectedValues.expectedWorkHours\">\r\n              <option value=\"\" disabled selected>Seçiniz</option>\r\n              <option value=\"09:00 - 17:00\">09:00 - 17:00</option>\r\n              <option value=\"10:00 - 18:00\">10:00 - 18:00</option>\r\n              <option value=\"Esnek Saatler\">Esnek Saatler</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n          \r\n\r\n        <!--İş Deneyimi-->\r\n        <div class=\"mb-3 row\">\r\n          <label for=\"XP\" class=\"section-title form-label\">İş Deneyimleri</label>\r\n          <div class=\"mb-3\">\r\n            \r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Company.CompanyName\" placeholder=\"Şirket İsmi\">\r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Company.CompanyField\" placeholder=\"Çalıştığı Sektör\">\r\n            <input type=\"number\" class=\"form-control mb-2\" v-model=\"Company.CompanySize\" placeholder=\"Çalışan Sayısı\">\r\n            <input type=\"number\" class=\"form-control\" v-model=\"Company.Years\" placeholder=\"Ne kadar çalıştınız?\">\r\n            \r\n          </div>   \r\n          <div class=\"d-inline  mb-2 mt-1\">\r\n            <button class=\" btn btn-warning\" style=\"float:right\" @click.prevent=\"handleCompany\">Ekle</button> \r\n            <div class=\"btn-group \" role=\"group\" aria-label=\"Basic example\"\r\n            v-for=\"(company, index) in Companies\" :key=\"index\"\r\n            @click=\"deleteXP(index)\"\r\n            >\r\n              <button type=\"button\" class=\"btn btn-success text-uppercase\"\r\n              >{{ company.CompanyName }}</button>\r\n              \r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <!--Bir önceki İş-->\r\n        <div class=\"mt-2\">\r\n          <label for=\"preJob\" class=\"section-title\">En Sonki İşiniz </label>\r\n          <div class=\"mb-3\">\r\n            <input type=\"text\" class=\"form-control mb-2 \" v-model=\"PreviousJob.Name\" placeholder=\"Şirket İsmi\">\r\n            <input type=\"text\" class=\"form-control mb-2 \" v-model=\"PreviousJob.Position\" placeholder=\"Poziyonunuz\"> \r\n\r\n          </div>\r\n        </div>\r\n\r\n        \r\n\r\n        <!--Yetenekler-->\r\n        <div class=\"mb-3\">\r\n          <div class=\"input-group-preppend \">\r\n            <label for=\"skills\" class=\"section-title\">Yetenekler</label>\r\n            <span class=\"input-group-addon\"></span>\r\n            <input\r\n            class=\"form-control\"\r\n            id=\"SkillInput\"\r\n            placeholder=\"Yeteneği yazınız..\"\r\n            v-model=\"searchVal\"\r\n            />\r\n          </div>\r\n          <div class=\"btn-group form-container \">\r\n            <button\r\n              v-for=\"skill in filteredSkills\"\r\n              :key=\"skill\"\r\n              type=\"button\"\r\n              class=\"btn flex-item\"\r\n              :class=\"{'btn-outline-success': !SelectedSkills.includes(skill), 'btn-success': SelectedSkills.includes(skill)}\"\r\n              @click=\"toggleSkill(skill)\"\r\n            >\r\n              {{ skill }}\r\n            </button>\r\n          </div>\r\n          <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\"\r\n          v-for=\"(skill, index) in SelectedSkills\" :key=\"index\"\r\n          @click=\"deleteSkill(index)\"\r\n          >\r\n            <button type=\"button\" class=\"btn btn-success\"\r\n            >{{ skill }}</button>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <!--Projeler-->\r\n        <div >\r\n          <label for=\"project\" class=\"section-title\">Projeler</label>\r\n          <div class=\"mb-3\">\r\n            \r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Project.Title\" placeholder=\"Projenin Başlığı\">\r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Project.Content\" placeholder=\"Projenin Açıklaması\">\r\n            <input type=\"number\" class=\"form-control\" v-model=\"Project.Time\" placeholder=\"Ne kadar çalıştınız?\">\r\n             \r\n          </div>  \r\n          <label for=\"\" class=\"form-label\" style=\"border-bottom: 1px solid #333;\">Proje ile ilgili olan yeteneklerinizi seçiniz</label>     \r\n          <div class=\"btn-group form-container \">\r\n            <button\r\n              v-for=\"skill in SelectedSkills\"\r\n              :key=\"skill\"\r\n              type=\"button\"\r\n              class=\"btn flex-item\"\r\n              :class=\"{'btn-outline-success': !FilteredSelectedSkill.includes(skill), 'btn-success': FilteredSelectedSkill.includes(skill)}\"\r\n              @click=\"toggleFilteredSkill(skill)\"\r\n            >\r\n              {{ skill }}\r\n            </button>\r\n            \r\n          </div>\r\n          <div class=\"d-inline-block mb-2 mt-1\">\r\n            <button class=\" btn btn-warning \"  @click.prevent=\"handleProject\">Ekle</button>\r\n            <div class=\"btn-group \" role=\"group\" aria-label=\"Basic example\"\r\n            v-for=\"(project, index) in Projects\" :key=\"index\"\r\n            @click=\"deleteProject(index)\"\r\n            >\r\n              <button type=\"button\" class=\"btn btn-success text-uppercase \"\r\n              >{{ project.Title }}</button>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <!--Hobiler-->\r\n        <div class=\"mb-3 \">\r\n          <label for=\"preJob\" class=\"section-title\">Hobileriniz </label>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\" class=\"form-control mb-2\" v-model=\"Interest\" placeholder=\"Hobileriniz\">\r\n            <span class=\"input-group-addon\"></span>\r\n            <button class=\" btn btn-warning mb-2\"  @click.prevent=\"handleHobi(Interest)\">Ekle</button> \r\n            \r\n          </div>\r\n          \r\n          <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\"\r\n          v-for=\"(interest, index) in Interests\" :key=\"index\"\r\n          @click=\"deleteInterest(index)\"\r\n          >\r\n            <button type=\"button\" class=\"btn btn-success\"\r\n            >{{ interest }}</button>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <!-- Özgeçmiş Yükleme -->\r\n        <div>\r\n          <label for=\"CV\" class=\"section-title\" \r\n          \r\n          >Özgeçmiş Yükleme</label>\r\n          <div class=\"mb-3 \">\r\n            <input id=\"resume\" type=\"file\" class=\"form-control\" @change=\"handleFileUpload\" />\r\n          </div>\r\n        </div>\r\n\r\n\r\n        \r\n\r\n\r\n        <!--Submit Buttonu-->\r\n        <div class=\"d-flex flex-row-reverse\">\r\n            <div class=\"p-2\">\r\n                <button type=\"submit\"\r\n                 class=\"btn btn-primary\"\r\n                 @click.prevent=\"submitForm\" >Kaydet</button>\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    </div>\r\n    \r\n  </template>\r\n  \r\n  <script>\r\n    import axios from 'axios';\r\n   \r\n  export default {\r\n    props:{\r\n       id: {\r\n      type: Number,\r\n      required: false\r\n    },\r\n      editMode: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n    },\r\n    \r\n\r\n\r\n    data() {\r\n      return {\r\n        Id:0,\r\n        \r\n        PersonalInfo:{FirstName:'',LastName:'',Age:'',Gender:'',Address:''},\r\n        ContactInfo:{Email:'',Phone:''},\r\n        EducationInfo: {EduLevel:'',Status:''},\r\n\r\n        Company:{CompanyName:'',CompanyField:'',CompanySize:0,Years:0},\r\n        Companies:[],\r\n\r\n        PreviousJob:{Name:'',Position:''},\r\n\r\n        SelectedSkills: [],\r\n\r\n        Interests:[],\r\n        Interest:'',\r\n        ExpectedValues:{locations:[],expectedSalary:0,expectedWorkHours:''},\r\n\r\n        SelectedLanguages: [],\r\n\r\n        Project: {Title:'',Content:'',Time:0,RelatedSkills:[]},\r\n        Projects:[],\r\n        FilteredSelectedSkill:[],\r\n        \r\n\r\n        Resume: \"\" ,\r\n\r\n        searchVal:'',\r\n        deleteIndex:'',\r\n        \r\n  \r\n   \r\n        \r\n        location:'',\r\n        cities: [],\r\n        educationLevel:['Lise','Önlisans','Lisan','Yüksek Lisans','Doktora'],\r\n        skillsList: [],\r\n        languagesList: ['İngilizce', 'Almanca', 'Fransızca', 'İspanyolca', 'İtalyanca', 'Çince'],\r\n           \r\n        mode:this.editMode,\r\n      }\r\n      \r\n    },\r\n    \r\n    computed: {\r\n        filteredSkills() {\r\n          // Arama girdisine göre skillsList'i filtrele\r\n          return this.skillsList.filter(skill =>\r\n            skill.toLowerCase().includes(this.searchVal.toLowerCase())\r\n          );\r\n        },\r\n        filteredCities() {\r\n          const query = this.location.toLowerCase();\r\n          return this.cities.filter(city =>\r\n            city.toLowerCase().includes(query)\r\n          );\r\n        },\r\n    },\r\n    mounted(){\r\n      this.loadSkills();\r\n      this.loadCity();\r\n      \r\n    },\r\n    created(){\r\n      this.ActiveUser=localStorage.getItem(\"ActiveUserId\");\r\n      if (this.mode) {\r\n        console.log(this.id);\r\n        axios.get(`http://localhost:7190/cv/${this.id}`)\r\n          .then(res => {\r\n            const cv = JSON.parse(JSON.stringify(res.data));\r\n            console.log(cv);\r\n            this.loadCv(cv);\r\n            \r\n          }\r\n        )\r\n          .catch(err => {\r\n            console.error('Error fetching advert for editing:', err);\r\n          });\r\n      }\r\n      \r\n    },\r\n    \r\n    methods:{\r\n      loadCv(cv) {\r\n        this.Id = cv.id;\r\n        \r\n        this.PersonalInfo = {\r\n            FirstName: cv.personalInfo.firstName || '',\r\n            LastName: cv.personalInfo.lastName || '',\r\n            Age: cv.personalInfo.age || '',\r\n            Gender: cv.personalInfo.gender || '',\r\n            Address: cv.personalInfo.address || ''\r\n        };\r\n        \r\n        this.ContactInfo = {\r\n            Email: cv.contactInfo.email || '',\r\n            Phone: cv.contactInfo.phone || ''\r\n        };\r\n        \r\n        this.EducationInfo = {\r\n            EduLevel: cv.educationInfo.eduLevel || '',\r\n            Status: cv.educationInfo.status || ''\r\n        };\r\n        \r\n        this.Companies = cv.companies.map(company => ({\r\n            CompanyName: company.companyName || '',\r\n            CompanyField: company.companyField || '',\r\n            CompanySize: company.companySize || 0,\r\n            Years: company.years || 0\r\n        }));\r\n\r\n        this.PreviousJob = {\r\n            Name: cv.previousJob.name || '',\r\n            Position: cv.previousJob.position || ''\r\n        };\r\n        \r\n        this.ExpectedValues = {\r\n            locations: cv.expectedValues.locations || [],\r\n            expectedSalary: cv.expectedValues.expectedSalary || 0,\r\n            expectedWorkHours: cv.expectedValues.expectedWorkHours || ''\r\n        };\r\n\r\n        this.SelectedSkills = cv.skills || [];\r\n        this.Interests = cv.interests || [];\r\n        this.SelectedLanguages = cv.languages || [];\r\n        \r\n        this.Projects = cv.projects.map(project => ({\r\n            Title: project.title || '',\r\n            Content: project.content || '',\r\n            Time: project.time || 0,\r\n            RelatedSkills: project.relatedSkills || []\r\n        }));\r\n\r\n        this.Resume = cv.resume || '';\r\n    },\r\n\r\n      \r\n    \r\n\r\n      addCity(city) {\r\n        if (city && !this.ExpectedValues.locations.includes(city)) {\r\n          this.ExpectedValues.locations.push(city);\r\n          this.location = '';\r\n        }\r\n      },\r\n      async loadCity() {\r\n        try {\r\n          const response = await fetch('/city.json');\r\n          if (!response.ok) {\r\n            throw new Error('Ağ hatası: ' + response.statusText);\r\n          }\r\n          const data = await response.json();\r\n          this.cities = data;\r\n        } catch (error) {\r\n          console.error('Şehirler yüklenirken bir hata oluştu:', error);\r\n        }\r\n      },\r\n      deleteLocation(index) {\r\n        this.ExpectedValues.locations.splice(index, 1);\r\n      },\r\n      async loadSkills() {\r\n        try {\r\n          const response = await fetch('/skills.json');\r\n          if (!response.ok) {\r\n            throw new Error('Ağ hatası: ' + response.statusText);\r\n          }\r\n          const data = await response.json();\r\n          this.skillsList = data;\r\n        } catch (error) {\r\n          console.error('Beceriler yüklenirken bir hata oluştu:', error);\r\n        }\r\n      },\r\n      async loadSkills() {\r\n        try {\r\n          // const response = await fetch('/skills.json');\r\n          const response = await fetch('/skills.json');\r\n          if (!response.ok) {\r\n            throw new Error('Ağ hatası: ' + response.statusText);\r\n          }\r\n          const data = await response.json();\r\n          this.skillsList = data;\r\n        } catch (error) {\r\n          console.error('Beceriler yüklenirken bir hata oluştu:', error);\r\n        }\r\n      },\r\n      deleteSkill(index){\r\n        this.SelectedSkills.splice(index, 1);\r\n      },\r\n      deleteInterest(index){\r\n        this.Interests.splice(index, 1);\r\n      },\r\n      deleteProject(index){\r\n        this.Projects.splice(index, 1);\r\n      },\r\n      deleteXP(index){\r\n        this.Companies.splice(index, 1);\r\n      },\r\n      handleCompany(){\r\n        const Company={\r\n          CompanyName:this.Company.CompanyName,\r\n          CompanyField:this.Company.CompanyField,\r\n          Years:parseInt(this.Company.Years),\r\n          CompanySize:parseInt(this.Company.CompanySize),\r\n        };\r\n        this.Companies.push(Company);\r\n        \r\n        this.Company.CompanyName = '';\r\n        this.Company.CompanyField = '';\r\n        this.Company.Years = '';\r\n        this.Company.CompanySize='';\r\n        \r\n\r\n      },\r\n      handleProject(){\r\n        const Project={\r\n          Title:this.Project.Title,\r\n          Content:this.Project.Content,\r\n          Time:parseInt(this.Project.Time)||0,\r\n          RelatedSkills:this.FilteredSelectedSkill\r\n        };\r\n        this.Projects.push(Project);\r\n        \r\n        this.Project.Title = '';\r\n        this.Project.Content = '';\r\n        this.Project.Time = '';\r\n        this.FilteredSelectedSkill=[];\r\n        \r\n\r\n      },\r\n      handleHobi(Interest){\r\n        this.Interests.push(Interest);\r\n        this.Interest='';\r\n\r\n\r\n\r\n      },\r\n      notifyPython() {\r\n        axios.post('http://localhost:5000/api/trigger')\r\n          .then(() => {\r\n            console.log(\"Python servisi tetiklendi.\");\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Python tetikleme hatası:\", error);\r\n          });\r\n      },\r\n      submitForm() {\r\n          const cv = {\r\n              Id: parseInt(this.Id) || 0,\r\n              ActiveUser:parseInt(this.ActiveUser),\r\n              PersonalInfo: {\r\n                  FirstName: this.PersonalInfo.FirstName || '',\r\n                  LastName: this.PersonalInfo.LastName || '',\r\n                  Age: this.PersonalInfo.Age || '',\r\n                  Gender: this.PersonalInfo.Gender || '',\r\n                  Address: this.PersonalInfo.Address || ''\r\n              },\r\n              ContactInfo: {\r\n                  Email: this.ContactInfo.Email || '',\r\n                  Phone: this.ContactInfo.Phone || ''\r\n              },\r\n              EducationInfo: {\r\n                  EduLevel: this.EducationInfo.EduLevel || '',\r\n                  Status: this.EducationInfo.Status || ''\r\n              },\r\n              Companies: this.Companies.length > 0 ? this.Companies : [{CompanyName:'',CompanyField:'',CompanySize:0,Years:0}], \r\n              PreviousJob: {\r\n                  Name: this.PreviousJob.Name || '',\r\n                  Position: this.PreviousJob.Position || ''\r\n              },\r\n              Skills: this.SelectedSkills || [],\r\n              Interests: this.Interests || [],\r\n              \r\n              ExpectedValues: {\r\n                  locations: this.ExpectedValues.locations || [],\r\n                  expectedSalary: this.ExpectedValues.expectedSalary || 0,\r\n                  expectedWorkHours: this.ExpectedValues.expectedWorkHours || ''\r\n              },\r\n              Languages: this.SelectedLanguages || [],\r\n              Projects: this.Projects.length > 0 ? this.Projects : [{Title:'',Content:'',Time:0,RelatedSkills:[]}], \r\n              Resume: this.Resume || \"\"\r\n          };\r\n\r\n          // cv objesini kullanarak gerekli işlemleri burada yapabilirsiniz.\r\n          console.log(cv);\r\n          if (this.id) {\r\n            // Düzenleme modu: PUT isteği\r\n            \r\n            axios.put(`http://localhost:7190/cv/`, cv)\r\n              .then(() => {\r\n                this.notifyPython();\r\n                this.$router.push('/employeeHome');\r\n              })\r\n              .catch(err => {\r\n                console.error('Error updating advert:', err);\r\n              });\r\n          } else {\r\n            \r\n            // Yeni ilan oluşturma modu: POST isteği\r\n            axios.post('http://localhost:7190/cv', cv)\r\n              .then(() => {\r\n                this.notifyPython();\r\n                this.$router.push('/employeeHome'  );\r\n              })\r\n              .catch(err => {\r\n                console.error('Error creating advert:', err);\r\n              });\r\n          }\r\n        \r\n        },\r\n        toggleLanguage(Language) {\r\n          const index = this.SelectedLanguages.indexOf(Language);\r\n          if (index === -1) {\r\n            this.SelectedLanguages.push(Language);\r\n          } else {\r\n            this.SelectedLanguages.splice(index, 1);\r\n          }\r\n        },\r\n        \r\n        toggleSkill(Skill) {\r\n          if (this.SelectedSkills.includes(Skill)) {\r\n            // Eğer skill zaten seçildiyse, çıkar\r\n            this.SelectedSkills = this.SelectedSkills.filter(s => s !== Skill);\r\n          } else {\r\n            // Eğer skill seçili değilse, ekle\r\n            this.SelectedSkills.push(Skill);\r\n          }\r\n        },\r\n        toggleFilteredSkill(Skill) {\r\n          const index = this.FilteredSelectedSkill.indexOf(Skill);\r\n          if (index === -1) {\r\n            this.FilteredSelectedSkill.push(Skill);\r\n          } else {\r\n            this.FilteredSelectedSkill.splice(index, 1);\r\n          }\r\n        },\r\n        handleFileUpload(event) {\r\n          const file = event.target.files[0];\r\n          const reader = new FileReader();\r\n\r\n          reader.onload = (e) => {\r\n            this.Resume = e.target.result;\r\n          };\r\n\r\n          if (file) {\r\n            reader.readAsDataURL(file); // Base64 formatında okur\r\n          }\r\n        },\r\n        }\r\n      };\r\n  </script>\r\n  \r\n  <style>\r\n  \r\n  .form-container {\r\n  max-height: 230px; /* İhtiyaca göre ayarlayın */\r\n  overflow-y: auto;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  background: #f9f9f9;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));\r\n  grid-template-rows: repeat(auto-fill, minmax(75px, 1fr));\r\n  gap: 10px;\r\n}\r\n  .section-title {\r\n    position: relative;\r\n    display: inline-block;\r\n    font-weight: 500;\r\n    padding-bottom: 0.1rem;    \r\n    border-bottom: 2px solid #333; /* Çizgi rengi ve kalınlığı */\r\n    margin-top: 1rem; /* Başlıklar arasında boşluk */\r\n    margin-bottom: 1rem; /* Başlıklar arasında boşluk */\r\n  }\r\n  .flex-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  .flex-item {\r\n    margin: 5px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}