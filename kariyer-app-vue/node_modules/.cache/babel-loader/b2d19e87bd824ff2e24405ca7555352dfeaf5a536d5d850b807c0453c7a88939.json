{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass($options.themeClass)\n  }, [_createVNode(_component_Navbar, {\n    onThemeChanged: $options.handleThemeChange\n  }, null, 8 /* PROPS */, [\"onThemeChanged\"]), _createVNode(_component_router_view)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","themeClass","_createVNode","_component_Navbar","onThemeChanged","handleThemeChange","_component_router_view"],"sources":["C:\\Users\\Furkan\\Documents\\Pratik kod\\NisoPratik\\kariyer-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div :class=\"themeClass\">\n    <Navbar @themeChanged=\"handleThemeChange\" />\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport Navbar from './components/Navbar.vue';\n\nexport default {\n  components: {\n    Navbar,\n  },\n  data() {\n    return {\n      theme: 'dark'\n    };\n  },\n  computed: {\n    themeClass() {\n      return this.theme === 'dark' ? 'bg-dark text-light' : 'bg-light text-dark';\n    }\n  },\n  created() {\n    const savedTheme = localStorage.getItem('theme') || 'dark';\n    this.theme = savedTheme;\n  },\n  methods: {\n    handleThemeChange(newTheme) {\n      this.theme = newTheme;\n    }\n  }\n};\n</script>\n"],"mappings":";;;;uBACEA,mBAAA,CAGM;IAHAC,KAAK,EADbC,eAAA,CACeC,QAAA,CAAAC,UAAU;MACrBC,YAAA,CAA4CC,iBAAA;IAAnCC,cAAY,EAAEJ,QAAA,CAAAK;EAAiB,6CACxCH,YAAA,CAA2BI,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}